/**
 * Selling Partner API for A+ Content Management
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForAContentManagement);
  }
}(this, function(expect, SellingPartnerApiForAContentManagement) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForAContentManagement.AplusContentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AplusContentApi', function() {
    describe('createContentDocument', function() {
      it('should call createContentDocument successfully', function(done) {
        //uncomment below and update the code to test createContentDocument
        //instance.createContentDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContentDocument', function() {
      it('should call getContentDocument successfully', function(done) {
        //uncomment below and update the code to test getContentDocument
        //instance.getContentDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContentDocumentAsinRelations', function() {
      it('should call listContentDocumentAsinRelations successfully', function(done) {
        //uncomment below and update the code to test listContentDocumentAsinRelations
        //instance.listContentDocumentAsinRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postContentDocumentApprovalSubmission', function() {
      it('should call postContentDocumentApprovalSubmission successfully', function(done) {
        //uncomment below and update the code to test postContentDocumentApprovalSubmission
        //instance.postContentDocumentApprovalSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postContentDocumentAsinRelations', function() {
      it('should call postContentDocumentAsinRelations successfully', function(done) {
        //uncomment below and update the code to test postContentDocumentAsinRelations
        //instance.postContentDocumentAsinRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postContentDocumentSuspendSubmission', function() {
      it('should call postContentDocumentSuspendSubmission successfully', function(done) {
        //uncomment below and update the code to test postContentDocumentSuspendSubmission
        //instance.postContentDocumentSuspendSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchContentDocuments', function() {
      it('should call searchContentDocuments successfully', function(done) {
        //uncomment below and update the code to test searchContentDocuments
        //instance.searchContentDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchContentPublishRecords', function() {
      it('should call searchContentPublishRecords successfully', function(done) {
        //uncomment below and update the code to test searchContentPublishRecords
        //instance.searchContentPublishRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContentDocument', function() {
      it('should call updateContentDocument successfully', function(done) {
        //uncomment below and update the code to test updateContentDocument
        //instance.updateContentDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateContentDocumentAsinRelations', function() {
      it('should call validateContentDocumentAsinRelations successfully', function(done) {
        //uncomment below and update the code to test validateContentDocumentAsinRelations
        //instance.validateContentDocumentAsinRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
