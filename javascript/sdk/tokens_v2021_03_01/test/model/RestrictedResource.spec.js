/**
 * Selling Partner API for Tokens 
 * The Selling Partner API for Tokens provides a secure way to access a customer's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes subsequent calls to restricted operations that correspond to the restricted resources that you specified.  For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-03-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForTokens);
  }
}(this, function(expect, SellingPartnerApiForTokens) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForTokens.RestrictedResource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RestrictedResource', function() {
    it('should create an instance of RestrictedResource', function() {
      // uncomment below and update the code to test RestrictedResource
      //var instance = new SellingPartnerApiForTokens.RestrictedResource();
      //expect(instance).to.be.a(SellingPartnerApiForTokens.RestrictedResource);
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new SellingPartnerApiForTokens.RestrictedResource();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new SellingPartnerApiForTokens.RestrictedResource();
      //expect(instance).to.be();
    });

    it('should have the property dataElements (base name: "dataElements")', function() {
      // uncomment below and update the code to test the property dataElements
      //var instance = new SellingPartnerApiForTokens.RestrictedResource();
      //expect(instance).to.be();
    });

  });

}));
