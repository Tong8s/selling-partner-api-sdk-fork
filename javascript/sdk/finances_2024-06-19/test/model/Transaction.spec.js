/**
 * The Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * The version of the OpenAPI document: 2024-06-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForFinances);
  }
}(this, function(expect, TheSellingPartnerApiForFinances) {
  'use strict';

  var instance;

  beforeEach(function() {
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transaction', function() {
    it('should create an instance of Transaction', function() {
      // uncomment below and update the code to test Transaction
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be.a(TheSellingPartnerApiForFinances.Transaction);
    });

    it('should have the property sellingPartnerMetadata (base name: "sellingPartnerMetadata")', function() {
      // uncomment below and update the code to test the property sellingPartnerMetadata
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property relatedIdentifiers (base name: "relatedIdentifiers")', function() {
      // uncomment below and update the code to test the property relatedIdentifiers
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionType (base name: "transactionType")', function() {
      // uncomment below and update the code to test the property transactionType
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transactionId")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionStatus (base name: "transactionStatus")', function() {
      // uncomment below and update the code to test the property transactionStatus
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property postedDate (base name: "postedDate")', function() {
      // uncomment below and update the code to test the property postedDate
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property totalAmount (base name: "totalAmount")', function() {
      // uncomment below and update the code to test the property totalAmount
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceDetails (base name: "marketplaceDetails")', function() {
      // uncomment below and update the code to test the property marketplaceDetails
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property contexts (base name: "contexts")', function() {
      // uncomment below and update the code to test the property contexts
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property breakdowns (base name: "breakdowns")', function() {
      // uncomment below and update the code to test the property breakdowns
      //var instance = new TheSellingPartnerApiForFinances.Transaction();
      //expect(instance).to.be();
    });

  });

}));