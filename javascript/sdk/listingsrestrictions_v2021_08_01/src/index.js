/**
 * Selling Partner API for Listings Restrictions
 * The Selling Partner API for Listings Restrictions provides programmatic access to restrictions on Amazon catalog listings.  For more information, see the [Listings Restrictions API Use Case Guide](doc:listings-restrictions-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import {ApiClient} from './ApiClient.js';
import {Error} from './js_client.listingsrestrictions_v2021_08_01.model/Error.js';
import {Link} from './js_client.listingsrestrictions_v2021_08_01.model/Link.js';
import {Reason} from './js_client.listingsrestrictions_v2021_08_01.model/Reason.js';
import {Restriction} from './js_client.listingsrestrictions_v2021_08_01.model/Restriction.js';
import {RestrictionList} from './js_client.listingsrestrictions_v2021_08_01.model/RestrictionList.js';
import {ListingsApi} from './js_client.listingsrestrictions_v2021_08_01.api/ListingsApi.js';


/**
* The Selling Partner API for Listings Restrictions provides programmatic access to restrictions on Amazon catalog listings.  For more information, see the [Listings Restrictions API Use Case Guide](doc:listings-restrictions-api-v2021-08-01-use-case-guide)..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SellingPartnerApiForListingsRestrictions = require('index'); // See note below*.
* var xxxSvc = new SellingPartnerApiForListingsRestrictions.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SellingPartnerApiForListingsRestrictions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SellingPartnerApiForListingsRestrictions.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SellingPartnerApiForListingsRestrictions.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2021-08-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:js_client.listingsrestrictions_v2021_08_01.model/Error}
     */
    Error,

    /**
     * The Link model constructor.
     * @property {module:js_client.listingsrestrictions_v2021_08_01.model/Link}
     */
    Link,

    /**
     * The Reason model constructor.
     * @property {module:js_client.listingsrestrictions_v2021_08_01.model/Reason}
     */
    Reason,

    /**
     * The Restriction model constructor.
     * @property {module:js_client.listingsrestrictions_v2021_08_01.model/Restriction}
     */
    Restriction,

    /**
     * The RestrictionList model constructor.
     * @property {module:js_client.listingsrestrictions_v2021_08_01.model/RestrictionList}
     */
    RestrictionList,

    /**
    * The ListingsApi service constructor.
    * @property {module:js_client.listingsrestrictions_v2021_08_01.api/ListingsApi}
    */
    ListingsApi
};
