/**
 * Selling Partner API for Listings Items
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForListingsItems);
  }
}(this, function(expect, SellingPartnerApiForListingsItems) {
  'use strict';

  var instance;

  beforeEach(function() {
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Item', function() {
    it('should create an instance of Item', function() {
      // uncomment below and update the code to test Item
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be.a(SellingPartnerApiForListingsItems.Item);
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property summaries (base name: "summaries")', function() {
      // uncomment below and update the code to test the property summaries
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property issues (base name: "issues")', function() {
      // uncomment below and update the code to test the property issues
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property offers (base name: "offers")', function() {
      // uncomment below and update the code to test the property offers
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentAvailability (base name: "fulfillmentAvailability")', function() {
      // uncomment below and update the code to test the property fulfillmentAvailability
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property procurement (base name: "procurement")', function() {
      // uncomment below and update the code to test the property procurement
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property relationships (base name: "relationships")', function() {
      // uncomment below and update the code to test the property relationships
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

    it('should have the property productTypes (base name: "productTypes")', function() {
      // uncomment below and update the code to test the property productTypes
      //var instance = new SellingPartnerApiForListingsItems.Item();
      //expect(instance).to.be();
    });

  });

}));